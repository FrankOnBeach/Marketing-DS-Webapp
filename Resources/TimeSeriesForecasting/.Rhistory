axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 10)) +theme(aspect.ratio=2.5/7)+ ggtitle("Two Cycle Oil Profit by Week Number")
two_Cycle_Oil_df[two_Cycle_Oil_df$Invoice_Year == 2020 & two_Cycle_Oil_df$Invoice_Week >= 11,]$Profit = two_Cycle_Oil_df[two_Cycle_Oil_df$Invoice_Year == 2020 & two_Cycle_Oil_df$Invoice_Week >= 11,]$Profit * covid_lift
two_Cycle_Oil_df = two_Cycle_Oil_df[two_Cycle_Oil_df$Invoice_Year  != 2015,]
two_Cycle_Oil_df %>%
ggplot( aes(x=Invoice_Week, y=Profit, group=Invoice_Year, color=Invoice_Year)) + theme_bw()+
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 10)) +theme(aspect.ratio=2.5/7)+ ggtitle("Two Cycle Oil Profit Covid Effect Adjusted by Week Number")
write.csv(two_Cycle_Oil_causal_df,"two cycle covid effect removed profit.csv")
two_Cycle_Oil_causal_df = constuct_ci_df(two_Cycle_Oil_df,"Profit")
for (i in 1:8){
two_Cycle_Oil_causal_df[i,2] = mean(c(two_Cycle_Oil_causal_df[i,3],two_Cycle_Oil_causal_df[i,4],two_Cycle_Oil_causal_df[i,5],two_Cycle_Oil_causal_df[i,6]))
}
two_Cycle_Oil_causal_df = two_Cycle_Oil_causal_df[,c("Profit_2020","Profit_2016","Profit_2017","Profit_2018","Profit_2019")]
two_Cycle_Oil_causal_df = two_Cycle_Oil_causal_df[1:35,]
pre.period <- c(1,campaign_impact_point)
post.period <- c(campaign_impact_point+1,35)
two_Cycle_impact <- CausalImpact(two_Cycle_Oil_causal_df, pre.period, post.period)
write.csv(two_Cycle_Oil_causal_df,"two_cycle_df.csv")
two_Cycle_impact
plot(two_Cycle_impact)
two_Cycle_Oil_sales_df = product_grouped_sales_df[product_grouped_sales_df$Product_Type == "2-Cycle Oil",]
two_Cycle_Oil_sales_df = two_Cycle_Oil_sales_df[two_Cycle_Oil_sales_df$Invoice_Year  != 2015,]
two_Cycle_Oil_sales_df %>%
ggplot( aes(x=Invoice_Week, y=Sales, group=Invoice_Year, color=Invoice_Year)) + theme_bw()+
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Sales", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 10)) +theme(aspect.ratio=2.5/7)+ ggtitle("Two Cycle Oil Sales by Week Number")
two_Cycle_Oil_sales_df[two_Cycle_Oil_sales_df$Invoice_Year == 2020 & two_Cycle_Oil_sales_df$Invoice_Week >= 11,]$Sales = two_Cycle_Oil_sales_df[two_Cycle_Oil_sales_df$Invoice_Year == 2020 & two_Cycle_Oil_sales_df$Invoice_Week >= 11,]$Sales * covid_lift
two_Cycle_Oil_sales_df = two_Cycle_Oil_sales_df[two_Cycle_Oil_sales_df$Invoice_Year  != 2015,]
two_Cycle_Oil_sales_df %>%
ggplot( aes(x=Invoice_Week, y=Sales, group=Invoice_Year, color=Invoice_Year)) + theme_bw()+
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Sales", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 10)) +theme(aspect.ratio=2.5/7)+ ggtitle("Two Cycle Oil Sales Covid Effect Adjusted by Week Number")
two_Cycle_Oil_sales_causal_df = constuct_ci_df(two_Cycle_Oil_sales_df,"Sales")
for (i in 1:8){
two_Cycle_Oil_sales_causal_df[i,2] = mean(c(two_Cycle_Oil_sales_causal_df[i,3],two_Cycle_Oil_sales_causal_df[i,4],two_Cycle_Oil_sales_causal_df[i,5],two_Cycle_Oil_sales_causal_df[i,6]))
}
two_Cycle_Oil_sales_causal_df = two_Cycle_Oil_sales_causal_df[,c("Sales_2020","Sales_2016","Sales_2017","Sales_2018","Sales_2019")]
two_Cycle_Oil_sales_causal_df = two_Cycle_Oil_sales_causal_df[1:35,]
pre.period <- c(1,campaign_impact_point)
post.period <- c(campaign_impact_point+1,35)
two_Cycle_sales_impact <- CausalImpact(two_Cycle_Oil_sales_causal_df, pre.period, post.period)
plot(two_Cycle_sales_impact)
tune_Up_kits_df = product_grouped_week_df[product_grouped_week_df$Product_Type == "Tune-Up Kits",]
tune_Up_kits_df = tune_Up_kits_df[tune_Up_kits_df$Invoice_Year  != 2015,]
tune_Up_kits_df %>%
ggplot( aes(x=Invoice_Week, y=Profit, group=Invoice_Year, color=Invoice_Year)) + theme_bw()+
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 10)) +theme(aspect.ratio=2.5/7)+ ggtitle("Tune Up Kits Profit by Week Number")
tune_Up_kits_df[tune_Up_kits_df$Invoice_Year == 2020 & tune_Up_kits_df$Invoice_Week >= 11,]$Profit = tune_Up_kits_df[tune_Up_kits_df$Invoice_Year == 2020 & tune_Up_kits_df$Invoice_Week >= 11,]$Profit * covid_lift
tune_Up_kits_df = tune_Up_kits_df[tune_Up_kits_df$Invoice_Year  != 2015,]
tune_Up_kits_df %>%
ggplot( aes(x=Invoice_Week, y=Profit, group=Invoice_Year, color=Invoice_Year)) + theme_bw() +
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 10)) +theme(aspect.ratio=2.5/7)+ ggtitle("Tune Up Kits Profit Covid Effect Adjusted by Week Number")
tune_Up_kits_casusal_df = constuct_ci_df(tune_Up_kits_df,"Profit")
for (i in 1:8){
tune_Up_kits_casusal_df[i,2] = mean(c(tune_Up_kits_casusal_df[i,3],tune_Up_kits_casusal_df[i,4],tune_Up_kits_casusal_df[i,5],tune_Up_kits_casusal_df[i,6]))
}
tune_Up_kits_casusal_df = tune_Up_kits_casusal_df[,c("Profit_2020","Profit_2016","Profit_2017","Profit_2018","Profit_2019")]
tune_Up_kits_casusal_df = tune_Up_kits_casusal_df[1:35,]
#Fill NA with 0 Beause there's no sales
tune_Up_kits_casusal_df[is.na(tune_Up_kits_casusal_df)] <- 0
pre.period <- c(1,campaign_impact_point)
post.period <- c(campaign_impact_point+1,35)
tune_Up_kits_impact <- CausalImpact(tune_Up_kits_casusal_df, pre.period, post.period)
plot(tune_Up_kits_impact)
tune_Up_kits_impact$report
bar_chain_df = product_grouped_week_df[product_grouped_week_df$Product_Type == "Bar & Chain Oil",]
bar_chain_casusal_df = constuct_ci_df(bar_chain_df,"Profit")
tune_Up_kits_sales_df = product_grouped_sales_df[product_grouped_sales_df$Product_Type == "Tune-Up Kits",]
tune_Up_kits_sales_df = tune_Up_kits_sales_df[tune_Up_kits_sales_df$Invoice_Year  != 2015,]
tune_Up_kits_sales_df %>%
ggplot( aes(x=Invoice_Week, y=Sales, group=Invoice_Year, color=Invoice_Year)) + theme_bw()+
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Sales", labels = scales::comma)+ scale_color_manual(values= line_plot_colors )+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 10)) +theme(aspect.ratio=2.5/7)+ ggtitle("Tune Up Kits Sales by Week Number")
tune_Up_kits_sales_df[tune_Up_kits_sales_df$Invoice_Year == 2020 & tune_Up_kits_sales_df$Invoice_Week >= 11,]$Sales = tune_Up_kits_sales_df[tune_Up_kits_sales_df$Invoice_Year == 2020 & tune_Up_kits_sales_df$Invoice_Week >= 11,]$Sales * covid_lift
tune_Up_kits_sales_df = tune_Up_kits_sales_df[tune_Up_kits_sales_df$Invoice_Year  != 2015,]
tune_Up_kits_sales_df %>%
ggplot( aes(x=Invoice_Week, y=Sales, group=Invoice_Year, color=Invoice_Year)) + theme_bw()+
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Sales", labels = scales::comma)+ scale_color_manual(values= line_plot_colors )+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 10)) +theme(aspect.ratio=2.5/7)+ ggtitle("Tune Up Kits Sales Covid Effect Adjusted by Week Number")
tune_Up_kits_sales_casusal_df = constuct_ci_df(tune_Up_kits_sales_df,"Sales")
for (i in 1:8){
tune_Up_kits_sales_casusal_df[i,2] = mean(c(tune_Up_kits_sales_casusal_df[i,3],tune_Up_kits_sales_casusal_df[i,4],tune_Up_kits_sales_casusal_df[i,5],tune_Up_kits_sales_casusal_df[i,6]))
}
tune_Up_kits_sales_casusal_df = tune_Up_kits_sales_casusal_df[,c("Sales_2020","Sales_2016","Sales_2017","Sales_2018","Sales_2019")]
tune_Up_kits_sales_casusal_df = tune_Up_kits_sales_casusal_df[1:35,]
#Fill NA with 0 Beause there's no sales
tune_Up_kits_sales_casusal_df[is.na(tune_Up_kits_sales_casusal_df)] <- 0
pre.period <- c(1,campaign_impact_point)
post.period <- c(campaign_impact_point+1,35)
tune_Up_kits_sales_impact <- CausalImpact(tune_Up_kits_sales_casusal_df, pre.period, post.period)
plot(tune_Up_kits_sales_impact)
library(CausalImpact)
library(readxl)
library(dplyr)
library(ggplot2)
library(scales)
line_plot_colors = c("#7AB9E1","#B5A6AB",  "#C09BAC", "#95B2AB", "#D8262E")
kawasaki_red = "#D8262E"
kawasaki_df = read_excel("D:/Frank/HZ Work/Kwasaki/KMC ROI analysis/Oil & TUK Sales 2016 - 2020 2.xlsx", sheet = "Sales Data Extract Dealer Chann")
kawasaki_df$Net_Profit <- as.numeric(gsub('[$,]', '', kawasaki_df$Net_Profit))
#Add in a year Column
kawasaki_df$Invoice_Year = format(kawasaki_df$Invoice_Date, "%G")
#Add in a week column
kawasaki_df$Invoice_Week = format(kawasaki_df$Invoice_Date, "%V")
all_grouped_week_df = kawasaki_df %>%
dplyr::group_by(Invoice_Year,Invoice_Week) %>%
summarise(Profit = sum(Net_Profit))
all_grouped_week_df = all_grouped_week_df[all_grouped_week_df$Invoice_Year  != 2015,]
all_grouped_week_df %>%
ggplot( aes(x=Invoice_Week, y=Profit, group=Invoice_Year, color=Invoice_Year)) + theme_bw() +
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 5)) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Profit by Week Number")
covid_lift = 0.919
all_grouped_week_df[all_grouped_week_df$Invoice_Year == 2020 & all_grouped_week_df$Invoice_Week >= 11,]$Profit = all_grouped_week_df[all_grouped_week_df$Invoice_Year == 2020 & all_grouped_week_df$Invoice_Week >= 11,]$Profit * covid_lift
all_grouped_week_df %>%
ggplot( aes(x=Invoice_Week, y=Profit, group=Invoice_Year, color=Invoice_Year)) + theme_bw() +
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 5)) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Profit with Covid Effect Adjusted by Week Number")
constuct_ci_df<-function(df,label){
df_2016 = df[df$Invoice_Year  == 2016,][c("Invoice_Week",label)]
names(df_2016)[names(df_2016) == label] <- paste(label, 2016, sep="_")
df_2017 = df[df$Invoice_Year == 2017,][c("Invoice_Week",label)]
names(df_2017)[names(df_2017) == label] <- paste(label, 2017, sep="_")
df_2018 = df[df$Invoice_Year == 2018,][c("Invoice_Week",label)]
names(df_2018)[names(df_2018) == label] <- paste(label, 2018, sep="_")
df_2019 = df[df$Invoice_Year== 2019,][c("Invoice_Week",label)]
names(df_2019)[names(df_2019) == label] <- paste(label, 2019, sep="_")
df_2020 = df[df$Invoice_Year == 2020,][c("Invoice_Week",label)]
names(df_2020)[names(df_2020) == label] <- paste(label, 2020, sep="_")
# Merge them together
temp_1 = merge(x = df_2016, y = df_2017, by = "Invoice_Week",
all = TRUE)
temp_2 = merge(x = temp_1, y = df_2018, by = "Invoice_Week", all
= TRUE)
temp_3 = merge(x = temp_2, y = df_2019, by = "Invoice_Week", all
= TRUE)
causal_df = merge(x = temp_3, y = df_2020, by
="Invoice_Week", all = TRUE)
return (causal_df)
}
all_causal_df = constuct_ci_df(all_grouped_week_df,"Profit")
all_causal_df
View(all_causal_df)
four_Cycle_sales_impact
two_Cycle_impact$report
tune_Up_kits_impact
two_Cycle_sales_impact
tune_Up_kits_sales_impact
library(ggplot2)
library(CausalImpact)
library(readxl)
library(dplyr)
library(ggplot2)
library(scales)
line_plot_colors = c("#7AB9E1","#B5A6AB",  "#C09BAC", "#95B2AB", "#D8262E")
kawasaki_red = "#D8262E"
kawasaki_df = read_excel("D:/Frank/HZ Work/Kwasaki/KMC ROI analysis/Oil & TUK Sales 2016 - 2020 2.xlsx", sheet = "Sales Data Extract Dealer Chann")
kawasaki_df$Net_Profit <- as.numeric(gsub('[$,]', '', kawasaki_df$Net_Profit))
#Add in a year Column
kawasaki_df$Invoice_Year = format(kawasaki_df$Invoice_Date, "%G")
#Add in a week column
kawasaki_df$Invoice_Week = format(kawasaki_df$Invoice_Date, "%V")
line_plot_colors = c("#7AB9E1","#B5A6AB",  "#C09BAC", "#95B2AB", "#D8262E")
kawasaki_red = "#D8262E"
kawasaki_df = read_excel("D:/Frank/HZ Work/Kwasaki/KMC ROI analysis/Oil & TUK Sales 2016 - 2020 2.xlsx", sheet = "Sales Data Extract Dealer Chann")
kawasaki_df$Net_Profit <- as.numeric(gsub('[$,]', '', kawasaki_df$Net_Profit))
#Add in a year Column
kawasaki_df$Invoice_Year = format(kawasaki_df$Invoice_Date, "%G")
#Add in a week column
kawasaki_df$Invoice_Week = format(kawasaki_df$Invoice_Date, "%V")
all_grouped_week_df = all_grouped_week_df[all_grouped_week_df$Invoice_Year  != 2015,]
all_grouped_week_df = kawasaki_df %>%
dplyr::group_by(Invoice_Year,Invoice_Week) %>%
summarise(Profit = sum(Net_Profit))
all_grouped_week_df = all_grouped_week_df[all_grouped_week_df$Invoice_Year  != 2015,]
all_grouped_week_df %>%
ggplot( aes(x=Invoice_Week, y=Profit, group=Invoice_Year, color=Invoice_Year)) + theme_bw() +
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 5)) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Profit by Week Number")
year_plot1_df = all_grouped_week_df[all_grouped_week_df$Invoice_Year  != 2020,]
year_plot1_df %>%
ggplot( aes(x=Invoice_Year, y=Profit)) + theme_bw() +
geom_bar(stat = "identity",color=kawasaki_red，fill=kawasaki_red)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Profit with Covid Effect Adjusted by Week Number")
year_plot1_df = all_grouped_week_df[all_grouped_week_df$Invoice_Year  != 2020,]
year_plot1_df %>%
ggplot( aes(x=Invoice_Year, y=Profit)) + theme_bw() +
geom_bar(stat = "identity",color=kawasaki_red，fill=kawasaki_red)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Profit with Covid Effect Adjusted by Week Number")
year_plot2_df = all_grouped_week_df[all_grouped_week_df$Invoice_Week  <= 35,]
year_plot2_df %>%
ggplot( aes(x=Invoice_Year, y=Profit)) + theme_bw() +
geom_bar(stat = "identity",color=kawasaki_red，fill=kawasaki_red)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Profit with Covid Effect Adjusted by Week Number")
all_grouped_week_df[all_grouped_week_df$Invoice_Year == 2020 & all_grouped_week_df$Invoice_Week >= 11,]$Profit = all_grouped_week_df[all_grouped_week_df$Invoice_Year == 2020 & all_grouped_week_df$Invoice_Week >= 11,]$Profit * covid_lift
covid_lift = 0.919
all_grouped_week_df[all_grouped_week_df$Invoice_Year == 2020 & all_grouped_week_df$Invoice_Week >= 11,]$Profit = all_grouped_week_df[all_grouped_week_df$Invoice_Year == 2020 & all_grouped_week_df$Invoice_Week >= 11,]$Profit * covid_lift
all_grouped_week_df %>%
ggplot( aes(x=Invoice_Week, y=Profit, group=Invoice_Year, color=Invoice_Year)) + theme_bw() +
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 5)) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Profit with Covid Effect Adjusted by Week Number")
constuct_ci_df<-function(df,label){
df_2016 = df[df$Invoice_Year  == 2016,][c("Invoice_Week",label)]
names(df_2016)[names(df_2016) == label] <- paste(label, 2016, sep="_")
df_2017 = df[df$Invoice_Year == 2017,][c("Invoice_Week",label)]
names(df_2017)[names(df_2017) == label] <- paste(label, 2017, sep="_")
df_2018 = df[df$Invoice_Year == 2018,][c("Invoice_Week",label)]
names(df_2018)[names(df_2018) == label] <- paste(label, 2018, sep="_")
df_2019 = df[df$Invoice_Year== 2019,][c("Invoice_Week",label)]
names(df_2019)[names(df_2019) == label] <- paste(label, 2019, sep="_")
df_2020 = df[df$Invoice_Year == 2020,][c("Invoice_Week",label)]
names(df_2020)[names(df_2020) == label] <- paste(label, 2020, sep="_")
# Merge them together
temp_1 = merge(x = df_2016, y = df_2017, by = "Invoice_Week",
all = TRUE)
temp_2 = merge(x = temp_1, y = df_2018, by = "Invoice_Week", all
= TRUE)
temp_3 = merge(x = temp_2, y = df_2019, by = "Invoice_Week", all
= TRUE)
causal_df = merge(x = temp_3, y = df_2020, by
="Invoice_Week", all = TRUE)
return (causal_df)
}
all_causal_df = constuct_ci_df(all_grouped_week_df,"Profit")
all_causal_df
for (i in 1:8){
all_causal_df[i,2] = mean(c(all_causal_df[i,3],all_causal_df[i,4],all_causal_df[i,5],all_causal_df[i,6]))
}
all_causal_df = all_causal_df[,c("Profit_2020","Profit_2016","Profit_2017","Profit_2018","Profit_2019")]
all_causal_df = all_causal_df[1:35,]
pre.period <- c(1,campaign_impact_point)
# In this part, the analysis will end on week 31, since there was another campaign started on week 32
all_causal_pre_df = all_causal_df[1:31,]
campaign_impact_point <- 24
pre.period <- c(1,campaign_impact_point)
post.period <- c(campaign_impact_point+1,31)
all_pre_impact <- CausalImpact(all_causal_pre_df, pre.period, post.period)
all_pre_impact
plot(all_pre_impact)
```{r}
report
all_pre_impact
all_pre_impact$report
library(CausalImpact)
library(readxl)
library(dplyr)
library(ggplot2)
library(scales)
line_plot_colors = c("#7AB9E1","#B5A6AB",  "#C09BAC", "#95B2AB", "#D8262E")
kawasaki_red = "#D8262E"
kawasaki_df = read_excel("D:/Frank/HZ Work/Kwasaki/KMC ROI analysis/Oil & TUK Sales 2016 - 2020 2.xlsx", sheet = "Sales Data Extract Dealer Chann")
kawasaki_df$Net_Profit <- as.numeric(gsub('[$,]', '', kawasaki_df$Net_Profit))
#Add in a year Column
kawasaki_df$Invoice_Year = format(kawasaki_df$Invoice_Date, "%G")
#Add in a week column
kawasaki_df$Invoice_Week = format(kawasaki_df$Invoice_Date, "%V")
line_plot_colors = c("#7AB9E1","#B5A6AB",  "#C09BAC", "#95B2AB", "#D8262E")
kawasaki_red = "#D8262E"
kawasaki_df = read_excel("D:/Frank/HZ Work/Kwasaki/KMC ROI analysis/Oil & TUK Sales 2016 - 2020 2.xlsx", sheet = "Sales Data Extract Dealer Chann")
kawasaki_df$Net_Profit <- as.numeric(gsub('[$,]', '', kawasaki_df$Net_Profit))
#Add in a year Column
kawasaki_df$Invoice_Year = format(kawasaki_df$Invoice_Date, "%G")
#Add in a week column
kawasaki_df$Invoice_Week = format(kawasaki_df$Invoice_Date, "%V")
all_grouped_week_df = kawasaki_df %>%
dplyr::group_by(Invoice_Year,Invoice_Week) %>%
summarise(Profit = sum(Net_Profit))
all_grouped_week_df = all_grouped_week_df[all_grouped_week_df$Invoice_Year  != 2015,]
all_grouped_week_df %>%
ggplot( aes(x=Invoice_Week, y=Profit, group=Invoice_Year, color=Invoice_Year)) + theme_bw() +
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 5)) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Profit by Week Number")
year_plot1_df = all_grouped_week_df[all_grouped_week_df$Invoice_Year  != 2020,]
year_plot1_df %>%
ggplot( aes(x=Invoice_Year, y=Profit)) + theme_bw() +
geom_bar(stat = "identity",color=kawasaki_red，fill=kawasaki_red)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Profit with Covid Effect Adjusted by Week Number")
covid_lift = 0.919
all_grouped_week_df[all_grouped_week_df$Invoice_Year == 2020 & all_grouped_week_df$Invoice_Week >= 11,]$Profit = all_grouped_week_df[all_grouped_week_df$Invoice_Year == 2020 & all_grouped_week_df$Invoice_Week >= 11,]$Profit * covid_lift
all_grouped_week_df %>%
ggplot( aes(x=Invoice_Week, y=Profit, group=Invoice_Year, color=Invoice_Year)) + theme_bw() +
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Profit", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 5)) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Profit with Covid Effect Adjusted by Week Number")
constuct_ci_df<-function(df,label){
df_2016 = df[df$Invoice_Year  == 2016,][c("Invoice_Week",label)]
names(df_2016)[names(df_2016) == label] <- paste(label, 2016, sep="_")
df_2017 = df[df$Invoice_Year == 2017,][c("Invoice_Week",label)]
names(df_2017)[names(df_2017) == label] <- paste(label, 2017, sep="_")
df_2018 = df[df$Invoice_Year == 2018,][c("Invoice_Week",label)]
names(df_2018)[names(df_2018) == label] <- paste(label, 2018, sep="_")
df_2019 = df[df$Invoice_Year== 2019,][c("Invoice_Week",label)]
names(df_2019)[names(df_2019) == label] <- paste(label, 2019, sep="_")
df_2020 = df[df$Invoice_Year == 2020,][c("Invoice_Week",label)]
names(df_2020)[names(df_2020) == label] <- paste(label, 2020, sep="_")
# Merge them together
temp_1 = merge(x = df_2016, y = df_2017, by = "Invoice_Week",
all = TRUE)
temp_2 = merge(x = temp_1, y = df_2018, by = "Invoice_Week", all
= TRUE)
temp_3 = merge(x = temp_2, y = df_2019, by = "Invoice_Week", all
= TRUE)
causal_df = merge(x = temp_3, y = df_2020, by
="Invoice_Week", all = TRUE)
return (causal_df)
}
all_causal_df = constuct_ci_df(all_grouped_week_df,"Profit")
all_causal_df
for (i in 1:8){
all_causal_df[i,2] = mean(c(all_causal_df[i,3],all_causal_df[i,4],all_causal_df[i,5],all_causal_df[i,6]))
}
constuct_ci_df<-function(df,label){
df_2016 = df[df$Invoice_Year  == 2016,][c("Invoice_Week",label)]
names(df_2016)[names(df_2016) == label] <- paste(label, 2016, sep="_")
df_2017 = df[df$Invoice_Year == 2017,][c("Invoice_Week",label)]
names(df_2017)[names(df_2017) == label] <- paste(label, 2017, sep="_")
df_2018 = df[df$Invoice_Year == 2018,][c("Invoice_Week",label)]
names(df_2018)[names(df_2018) == label] <- paste(label, 2018, sep="_")
df_2019 = df[df$Invoice_Year== 2019,][c("Invoice_Week",label)]
names(df_2019)[names(df_2019) == label] <- paste(label, 2019, sep="_")
df_2020 = df[df$Invoice_Year == 2020,][c("Invoice_Week",label)]
names(df_2020)[names(df_2020) == label] <- paste(label, 2020, sep="_")
# Merge them together
temp_1 = merge(x = df_2016, y = df_2017, by = "Invoice_Week",
all = TRUE)
temp_2 = merge(x = temp_1, y = df_2018, by = "Invoice_Week", all
= TRUE)
temp_3 = merge(x = temp_2, y = df_2019, by = "Invoice_Week", all
= TRUE)
causal_df = merge(x = temp_3, y = df_2020, by
="Invoice_Week", all = TRUE)
return (causal_df)
}
all_causal_df = constuct_ci_df(all_grouped_week_df,"Profit")
all_causal_df
for (i in 1:8){
all_causal_df[i,2] = mean(c(all_causal_df[i,3],all_causal_df[i,4],all_causal_df[i,5],all_causal_df[i,6]))
}
all_causal_df = all_causal_df[,c("Profit_2020","Profit_2016","Profit_2017","Profit_2018","Profit_2019")]
all_causal_df = all_causal_df[1:35,]
write.csv(all_causal_df,"covid_effect_removed_profit.csv")
campaign_impact_point <- 24
pre.period <- c(1,campaign_impact_point)
post.period <- c(campaign_impact_point+1,35)
all_impact <- CausalImpact(all_causal_df, pre.period, post.period)
all_impact
all_impact$report
plot(all_impact)
# In this part, the analysis will end on week 31, since there was another campaign started on week 32
# for (i in 1:8){
#   all_causal_df[i,2] = mean(c(all_causal_df[i,3],all_causal_df[i,4],all_causal_df[i,5],all_causal_df[i,6]))
# }
all_causal_pre_df = all_causal_df[1:31,]
campaign_impact_point <- 24
pre.period <- c(1,campaign_impact_point)
post.period <- c(campaign_impact_point+1,31)
all_pre_impact <- CausalImpact(all_causal_pre_df, pre.period, post.period)
all_pre_impact
all_pre_impact$report
plot(all_pre_impact)
kawasaki_df$`Net Sales Amount` <- as.numeric(gsub('[$,]', '', kawasaki_df$`Net Sales Amount`))
all_grouped_sales_df = kawasaki_df %>%
dplyr::group_by(Invoice_Year,Invoice_Week) %>%
summarise(Sales = sum(`Net Sales Amount`))
all_grouped_sales_df = all_grouped_sales_df[all_grouped_sales_df$Invoice_Year  != 2015,]
all_grouped_sales_df %>%
ggplot( aes(x=Invoice_Week, y=Sales, group=Invoice_Year, color=Invoice_Year)) + theme_bw() +
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Sales", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 10)) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawasaki Sales by Week Number")
all_grouped_sales_df[all_grouped_sales_df$Invoice_Year == 2020 & all_grouped_sales_df$Invoice_Week >= 11,]$Sales = all_grouped_sales_df[all_grouped_sales_df$Invoice_Year == 2020 & all_grouped_sales_df$Invoice_Week >= 11,]$Sales * covid_lift
all_grouped_sales_df %>%
ggplot( aes(x=Invoice_Week, y=Sales, group=Invoice_Year, color=Invoice_Year)) + theme_bw()+
geom_line(size = 1)+theme(axis.text.x = element_text(color="#111111",size=12, angle=45),
axis.text.y = element_text(color="#111111",
size=12, angle=45))+ scale_y_continuous(name="Sales", labels = scales::comma)+ scale_color_manual(values=line_plot_colors)+scale_x_discrete(name="Week Number",breaks=seq(0, 50, 5)) +theme(aspect.ratio=2.5/7)+ ggtitle("Kawaski Sales with Covid Effect Adjusted")
all_sales_causal_df = constuct_ci_df(all_grouped_sales_df,"Sales")
for (i in 1:8){
all_sales_causal_df[i,2] = mean(c(all_sales_causal_df[i,3],all_sales_causal_df[i,4],all_sales_causal_df[i,5],all_sales_causal_df[i,6]))
}
all_sales_causal_df = all_sales_causal_df[,c("Sales_2020","Sales_2016","Sales_2017","Sales_2018","Sales_2019")]
all_sales_causal_df = all_sales_causal_df[1:35,]
campaign_impact_point <- 24
pre.period <- c(1,campaign_impact_point)
post.period <- c(campaign_impact_point+1,35)
all_sales_impact <- CausalImpact(all_sales_causal_df, pre.period, post.period)
all_sales_causal_df = all_sales_causal_df[,c("Sales_2020","Sales_2016","Sales_2017","Sales_2018","Sales_2019")]
all_sales_causal_df = all_sales_causal_df[1:35,]
# In this part, the analysis will end on week 31, since there was another campaign started on week 32
# for (i in 1:8){
#   all_causal_df[i,2] = mean(c(all_causal_df[i,3],all_causal_df[i,4],all_causal_df[i,5],all_causal_df[i,6]))
# }
all_sales_causal_pre_df = all_sales_causal_df[1:31,]
campaign_impact_point <- 24
pre.period <- c(1,campaign_impact_point)
post.period <- c(campaign_impact_point+1,31)
all_sales_pre_impact <- CausalImpact(all_sales_causal_pre_df, pre.period, post.period)
all_sale_pre_impact
all_sales_pre_impact
all_sales_pre_impact$report
plot(all_sales_pre_impact)
install.packages("stlplus")
plot(stl(vw_df, s.window = 7, t.window = 50, t.jump = 1))
vw_df = read_csv("D:/Frank/HZ Work/HZ Projects/Seasonal Forcast Webapp/VWSP Forcasting Sessions.csv")
vw_df = read.csv("D:/Frank/HZ Work/HZ Projects/Seasonal Forcast Webapp/VWSP Forcasting Sessions.csv")
plot(stl(vw_df, s.window = 7, t.window = 50, t.jump = 1))
vw_df = read.csv("D:/Frank/HZ Work/HZ Projects/Seasonal Forcast Webapp/VWSP Forcasting Sessions.csv")
vw_sessions_df = vw_df[,c("Date","Sessions")]
plot(stl(vw_sessions_df, s.window = 7, t.window = 50, t.jump = 1))
plot(stl(vw_sessions_df, s.window = 7, t.window = 50))
plot(stl(vw_session_ts, s.window = 7, t.window = 50))
library(stlplus)
library(tsbox)
vw_df = read.csv("D:/Frank/HZ Work/HZ Projects/Seasonal Forcast Webapp/VWSP Forcasting Sessions.csv")
vw_sessions_df = vw_df[,c("Date","Sessions")]
vw_session_ts = ts_xts(vw_sessions_df)
plot(stl(vw_session_ts, s.window = 7, t.window = 50))
vw_sessions_df = vw_df[,c("Date","Sessions")]
vw_session_ts = ts_xts(vw_sessions_df)
install.packages("tsbox")
vw_session_ts = ts_xts(vw_sessions_df)
library(tsbox)
vw_session_ts = ts_xts(vw_sessions_df)
names(vw_df)[names(vw_df) == 'Date'] <- 'time'
vw_session_ts = ts_xts(vw_sessions_df)
vw_sessions_df = vw_df[,c("time","Sessions")]
vw_session_ts = ts_xts(vw_sessions_df)
View(vw_sessions_df)
vw_session_ts = ts_xts(vw_sessions_df)
vw_session_ts = ts_ts(vw_sessions_df)
vw_sessions_df = vw_df[,c("time","Sessions")]
vw_session_ts = ts_ts(vw_sessions_df)
vw_session_ts = tsbox::ts_xts(vw_sessions_df)
View(vw_sessions_df)
install.packages("xts")
install.packages("xts")
vw_df = read.csv("D:/Frank/HZ Work/HZ Projects/Seasonal Forcast Webapp/VWSP Forcasting Sessions.csv")
library(xts)
vw_df = read.csv("D:/Frank/HZ Work/HZ Projects/Seasonal Forcast Webapp/VWSP Forcasting Sessions.csv")
vw_sessions_df = vw_df[,c("Date","Sessions")]
vw_session_ts = xts(vw_sessions_df$Sessions, vw_sessions_df$Date)
vw_session_ts = xts(vw_sessions_df$Sessions, vw_sessions_df$Date, order.by=as.POSIXct(vw_sessions_df$Date))
vw_df$Date = as.Date(vw_df$Date)
vw_sessions_df = vw_df[,c("Date","Sessions")]
vw_session_ts = xts(vw_sessions_df$Sessions, vw_sessions_df$Date)
vw_df$Date = as.Date(vw_df$Date)
vw_sessions_df = vw_df[,c("Date","Sessions")]
View(vw_sessions_df)
Frank
View(vw_df)
vw_df = read.csv("D:/Frank/HZ Work/HZ Projects/Seasonal Forcast Webapp/VWSP Forcasting Sessions.csv")
View(vw_df)
vw_df = read.csv("D:/Frank/HZ Work/HZ Projects/Seasonal Forcast Webapp/VWSP Forcasting Sessions.csv")
vw_df$Date = as.Date(vw_df$Date,"%m/%d/%Y")
library(stlplus)
vw_sessions_df = vw_df[,c("Date","Sessions")]
vw_session_ts = xts(vw_sessions_df$Sessions, vw_sessions_df$Date)
plot(stl(vw_session_ts, s.window = 7, t.window = 50))
plot(stl(vw_session_ts, s.window = 7, t.window = 10))
vw_df$Date = as.Date(vw_df$Date,"%m/%d/%Y")
vw_sessions_df = vw_df[,c("Date","Sessions")]
vw_session_ts = xts(vw_sessions_df$Sessions, vw_sessions_df$Date)
plot(stl(vw_session_ts, s.window = 7, t.window = 10))
View(vw_sessions_df)
vw_df$Date = as.Date(vw_df$Date,"%m/%d/%Y")
View(vw_df)
vw_df = read.csv("D:/Frank/HZ Work/HZ Projects/Seasonal Forcast Webapp/VWSP Forcasting Sessions.csv")
View(vw_df)
vw_df$Date = as.Date(vw_df$Date,"%m/%d/%Y"),"20%y-%m-%d"))
vw_df = read.csv("D:/Frank/HZ Work/HZ Projects/Seasonal Forcast Webapp/VWSP Forcasting Sessions.csv")
vw_df$Date = format(as.Date(vw_df$Date,"%m/%d/%Y"),"20%y-%m-%d")
vw_df$Date = as.Date(vw_df$Date)
vw_sessions_df = vw_df[,c("Date","Sessions")]
vw_session_ts = xts(vw_sessions_df$Sessions, vw_sessions_df$Date)
plot(stl(vw_session_ts, s.window = 7, t.window = 10))
View(vw_session_ts)
View(vw_sessions_df)
View(vw_df)
View(vw_sessions_df)
View(vw_session_ts)
plot(stl(vw_session_ts, s.window = 7, t.window = 10))
plot(stl(vw_session_ts, "periodic"))
vw_session_ts = ts(vw_sessions_df$Sessions, vw_sessions_df$Date)
plot(stl(vw_session_ts, s.window = 1, t.window = 10))
plot(stl(vw_session_ts, s.window = 1, t.window = 10))
plot(stl(vw_session_ts, s.window = 2, t.window = 10))
plot(stl(vw_session_ts, s.window = 2, t.window = 5))
plot(stl(vw_session_ts, s.window = 2, t.window = 5))
plot(stl(vw_session_ts, s.window = 2, t.window = 1))
shiny::runApp('D:/Frank/HZ Work/HZ Projects/TimeSeriesFocasting')
runApp('D:/Frank/HZ Work/HZ Projects/TimeSeriesFocasting')
runApp('D:/Frank/HZ Work/HZ Projects/TimeSeriesFocasting')
shiny::runApp('D:/Frank/HZ Work/HZ Projects/TimeSeriesFocasting')
